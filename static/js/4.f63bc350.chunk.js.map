{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","img","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","messages","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogPage","dialogsElements","dialogsData","map","d","alt","src","messagesElements","messageData","m","dialogs","dialogsItems","values","addMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCapMC,EAVI,SAACC,GAChB,OACI,qBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAjC,SACI,eAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,UAAsCN,EAAMO,IAA5C,IAAkDP,EAAMQ,WCOrDC,EARC,SAACT,GACb,OACI,qBAAKC,UAAWC,IAAEQ,QAAlB,SAA4BV,EAAMU,W,iCC+BpCC,EAAcC,YAAiB,IAc/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACd,GACpB,OACI,sBAAMgB,SAAUhB,EAAMiB,aAAtB,SACI,sBAAKhB,UAAWC,IAAEgB,SAAlB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUb,KAAK,iBAAiBc,YAAY,qBACvDC,SAAU,CAACC,IAAUb,KAC5B,yDASDc,EA9CC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,WAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBF,GAAIyB,EAAEzB,GAC/BC,IAAK,qBAAKyB,IAAK,SAAUC,IAAKF,EAAExB,OADbwB,EAAEzB,OAGhF4B,EAAmBR,EAAMS,YAAYL,KAAI,SAACM,GAAD,OAAO,cAAC,EAAD,CAAoB1B,QAAS0B,EAAE1B,SAAjB0B,EAAE9B,OAOpE,OACI,sBAAKL,UAAWC,IAAEmC,QAAlB,UACI,qBAAKpC,UAAWC,IAAEoC,aAAlB,SACKV,IAEL,sBAAK3B,UAAWC,IAAEgB,SAAlB,UACI,oCAAOgB,KACP,cAACrB,EAAD,CAAqBG,SAXb,SAACuB,GACjBvC,EAAMwC,WAAWD,EAAOE,0B,uDCjB5BC,EAA6B,SAAChB,GAAD,MAAY,CACzCiB,OAAQjB,EAAMkB,KAAKD,S,OCSRE,sBACXC,aAPkB,SAACpB,GACnB,MAAO,CACHC,WAAYD,EAAMC,cAKG,CAACa,kBDPE,SAACO,GAAe,IACtCC,EADqC,4JAGvC,WACI,OAAKC,KAAKjD,MAAM2C,OAET,cAACI,EAAD,eAAeE,KAAKjD,QAFI,cAAC,IAAD,CAAUK,GAAI,eAJV,GACX6C,IAAMH,WAWtC,OAFqCD,YAAQJ,EAARI,CAAoCE,KCJ9DH,CAGbpB","file":"static/js/4.f63bc350.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3lDj_\",\"dialogsItems\":\"Dialogs_dialogsItems__3KjlR\",\"dialog\":\"Dialogs_dialog__20x9w\",\"active\":\"Dialogs_active__1ivZs\",\"messages\":\"Dialogs_messages__1C_hB\",\"message\":\"Dialogs_message__1bzSo\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.img} {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\n\r\nimport DialogItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Messages/Messages\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/Form/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validator\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogPage;\r\n\r\n    let dialogsElements = state.dialogsData.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}\r\n                                                                   img={<img alt={'avatar'} src={d.img}/>}/>)\r\n\r\n    let messagesElements = state.messageData.map((m) => <Message key={m.id} message={m.message}/>)\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div> {messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.messages}>\r\n                <Field component={Textarea} name=\"newMessageBody\" placeholder='Enter your message'\r\n                       validate={[required, maxLength50]}/>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport {addMessage} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}